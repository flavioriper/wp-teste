function GMW_Geocoder(e,o){this.provider=e||"nominatim",this.inputField=o||!1,jQuery.extend(this,GMW_Geocoders[this.provider]),this.options=jQuery.extend(GMW_Geocoders.options,this.options),this.response.provider=this.provider,this.initialize()}function gmw_geocoder(e){return new GMW_Geocoder(e)}var GMW_Geocoders={options:{region:gmwVars.settings.general.country_code||"us",language:gmwVars.settings.general.language_code||"en",suggestResults:!1,limit:10},locationFields:{latitude:"",longitude:"",lat:"",lng:"",street_number:"",street_name:"",street:"",premise:"",neighborhood:"",city:"",county:"",region_name:"",region_code:"",postcode:"",country_name:"",country_code:"",address:"",formatted_address:"",place_id:"",level:""},google_maps:{options:{},locationFields:{},get:function(e,o,a,n){var t=this,i=new google.maps.Geocoder,r={region:o.region,language:o.language};"reverseGeocode"==e?r.latLng=new google.maps.LatLng(o.q[0],o.q[1]):(t.defaultFields.address=o.q,r.address=o.q),i.geocode(r,function(o,i){return t.response.data=o,i!==google.maps.GeocoderStatus.OK?void t.geocodeFailed(i,n):"reverseGeocode"==e&&"APPROXIMATE"==o[0].geometry.location_type?(t.response.data=o[0]=[],console.log("No results - Approximate."),t.geocodeFailed("ZERO_RESULTS",n)):t.geocodeSuccess(o[0],a)})},getLocationFields:function(e){var o={},a=e.address_components,n="undefined"!=typeof e.place_id?e.place_id:"";o.place_id=n,o.formatted_address=e.formatted_address,o.lat=o.latitude=e.geometry.location.lat(),o.lng=o.longitude=e.geometry.location.lng();for(var t in a)"street_number"==a[t].types&&void 0!=a[t].long_name&&(o.street_number=a[t].long_name),"route"==a[t].types&&void 0!=a[t].long_name&&(o.street_name=a[t].long_name,o.street=o.street_number+" "+o.street_name),"subpremise"==a[t].types&&void 0!=a[t].long_name&&(o.premise=a[t].long_name),"neighborhood,political"==a[t].types&&void 0!=a[t].long_name&&(o.neighborhood=a[t].long_name),"locality,political"==a[t].types&&void 0!=a[t].long_name?o.city=a[t].long_name:"postal_town"==a[t].types&&void 0!=a[t].long_name&&(o.city=a[t].long_name),"administrative_area_level_1,political"==a[t].types&&(o.region_name=a[t].long_name,o.region_code=a[t].short_name),"administrative_area_level_2,political"==a[t].types&&void 0!=a[t].long_name&&(o.county=a[t].long_name),"postal_code"==a[t].types&&void 0!=a[t].long_name&&(o.postcode=a[t].long_name),"country,political"==a[t].types&&(o.country_name=a[t].long_name,o.country_code=a[t].short_name);return o}},nominatim:{geocodeUrl:"https://nominatim.openstreetmap.org/search",reverseGeocodeUrl:"https://nominatim.openstreetmap.org/reverse",options:{format:"jsonv2",addressdetails:"1","accept-language":"en",zoom:"18",email:gmwVars.settings.api.nominatim_email||"",region:"us",limit:10},locationFields:{place_id:"place_id",formatted_address:"display_name",lat:"lat",lng:"lon",street_number:"address.house_number",street_name:"address.road",city:["address.city","address.town","address.suburb"],county:"address.county",region_name:"address.state",postcode:"address.postcode",country_name:"address.country",country_code:"address.country_code"},initialize:function(){this.options["accept-language"]=this.options.language},get:function(e,o,a,n){var t,i,r=this,s=o.q;delete o.q,t=jQuery.param(o),"reverseGeocode"==e?i=this.reverseGeocodeUrl+"?lat="+s[0]+"&lon="+s[1]+"&"+t:(r.defaultFields.address=s,i=this.geocodeUrl+"?q="+s+"&"+t),r.jqXHR=jQuery.getJSON(i,function(t,i){if(r.response.data=t,"undefined"!=typeof t.error)return r.geocodeFailed(t.error,n);if("reverseGeocode"==e)return r.geocodeSuccess(t,a);if(0==t.length)return r.geocodeFailed("No results found.",n);if(o.suggestResults&&t.length>1)return r.suggestResults(t,"display_name",a);if(t.length>1)for(var s in t)if("undefined"!=typeof t[s].address.country_code&&t[s].address.country_code==o.region)return void r.geocodeSuccess(t[s],a);return r.geocodeSuccess(t[0],a)}).fail(function(e,o,a){r.geocodeFailed(o+" "+a,n)})}},regions:{AL:"Alabama",AK:"Alaska",AS:"American Samoa",AZ:"Arizona",AR:"Arkansas",CA:"California",CO:"Colorado",CT:"Connecticut",DE:"Delaware",DC:"District Of Columbia",FM:"Federated States Of Micronesia",FL:"Florida",GA:"Georgia",GU:"Guam",HI:"Hawaii",ID:"Idaho",IL:"Illinois",IN:"Indiana",IA:"Iowa",KS:"Kansas",KY:"Kentucky",LA:"Louisiana",ME:"Maine",MH:"Marshall Islands",MD:"Maryland",MA:"Massachusetts",MI:"Michigan",MN:"Minnesota",MS:"Mississippi",MO:"Missouri",MT:"Montana",NE:"Nebraska",NV:"Nevada",NH:"New Hampshire",NJ:"New Jersey",NM:"New Mexico",NY:"New York",NC:"North Carolina",ND:"North Dakota",MP:"Northern Mariana Islands",OH:"Ohio",OK:"Oklahoma",OR:"Oregon",PW:"Palau",PA:"Pennsylvania",PR:"Puerto Rico",RI:"Rhode Island",SC:"South Carolina",SD:"South Dakota",TN:"Tennessee",TX:"Texas",UT:"Utah",VT:"Vermont",VI:"Virgin Islands",VA:"Virginia",WA:"Washington",WV:"West Virginia",WI:"Wisconsin",WY:"Wyoming"},countries:{AF:"Afghanistan",AX:"Ã…land Islands",AL:"Albania",DZ:"Algeria",AS:"American Samoa",AD:"AndorrA",AO:"Angola",AI:"Anguilla",AQ:"Antarctica",AG:"Antigua and Barbuda",AR:"Argentina",AM:"Armenia",AW:"Aruba",AU:"Australia",AT:"Austria",AZ:"Azerbaijan",BS:"Bahamas",BH:"Bahrain",BD:"Bangladesh",BB:"Barbados",BY:"Belarus",BE:"Belgium",BZ:"Belize",BJ:"Benin",BM:"Bermuda",BT:"Bhutan",BO:"Bolivia",BA:"Bosnia and Herzegovina",BW:"Botswana",BV:"Bouvet Island",BR:"Brazil",IO:"British Indian Ocean Territory",BN:"Brunei Darussalam",BG:"Bulgaria",BF:"Burkina Faso",BI:"Burundi",KH:"Cambodia",CM:"Cameroon",CA:"Canada",CV:"Cape Verde",KY:"Cayman Islands",CF:"Central African Republic",TD:"Chad",CL:"Chile",CN:"China",CX:"Christmas Island",CC:"Cocos (Keeling) Islands",CO:"Colombia",KM:"Comoros",CG:"Congo",CD:"Congo, Democratic Republic",CK:"Cook Islands",CR:"Costa Rica",CI:'Cote D"Ivoire',HR:"Croatia",CU:"Cuba",CY:"Cyprus",CZ:"Czech Republic",DK:"Denmark",DJ:"Djibouti",DM:"Dominica",DO:"Dominican Republic",EC:"Ecuador",EG:"Egypt",SV:"El Salvador",GQ:"Equatorial Guinea",ER:"Eritrea",EE:"Estonia",ET:"Ethiopia",FK:"Falkland Islands (Malvinas)",FO:"Faroe Islands",FJ:"Fiji",FI:"Finland",FR:"France",GF:"French Guiana",PF:"French Polynesia",TF:"French Southern Territories",GA:"Gabon",GM:"Gambia",GE:"Georgia",DE:"Germany",GH:"Ghana",GI:"Gibraltar",GR:"Greece",GL:"Greenland",GD:"Grenada",GP:"Guadeloupe",GU:"Guam",GT:"Guatemala",GG:"Guernsey",GN:"Guinea",GW:"Guinea-Bissau",GY:"Guyana",HT:"Haiti",HM:"Heard Island and Mcdonald Islands",VA:"Holy See (Vatican City State)",HN:"Honduras",HK:"Hong Kong",HU:"Hungary",IS:"Iceland",IN:"India",ID:"Indonesia",IR:"Iran",IQ:"Iraq",IE:"Ireland",IM:"Isle of Man",IL:"Israel",IT:"Italy",JM:"Jamaica",JP:"Japan",JE:"Jersey",JO:"Jordan",KZ:"Kazakhstan",KE:"Kenya",KI:"Kiribati",KP:"Korea (North)",KR:"Korea (South)",XK:"Kosovo",KW:"Kuwait",KG:"Kyrgyzstan",LA:"Laos",LV:"Latvia",LB:"Lebanon",LS:"Lesotho",LR:"Liberia",LY:"Libyan Arab Jamahiriya",LI:"Liechtenstein",LT:"Lithuania",LU:"Luxembourg",MO:"Macao",MK:"Macedonia",MG:"Madagascar",MW:"Malawi",MY:"Malaysia",MV:"Maldives",ML:"Mali",MT:"Malta",MH:"Marshall Islands",MQ:"Martinique",MR:"Mauritania",MU:"Mauritius",YT:"Mayotte",MX:"Mexico",FM:"Micronesia",MD:"Moldova",MC:"Monaco",MN:"Mongolia",MS:"Montserrat",MA:"Morocco",MZ:"Mozambique",MM:"Myanmar",NA:"Namibia",NR:"Nauru",NP:"Nepal",NL:"Netherlands",AN:"Netherlands Antilles",NC:"New Caledonia",NZ:"New Zealand",NI:"Nicaragua",NE:"Niger",NG:"Nigeria",NU:"Niue",NF:"Norfolk Island",MP:"Northern Mariana Islands",NO:"Norway",OM:"Oman",PK:"Pakistan",PW:"Palau",PS:"Palestinian Territory, Occupied",PA:"Panama",PG:"Papua New Guinea",PY:"Paraguay",PE:"Peru",PH:"Philippines",PN:"Pitcairn",PL:"Poland",PT:"Portugal",PR:"Puerto Rico",QA:"Qatar",RE:"Reunion",RO:"Romania",RU:"Russian Federation",RW:"Rwanda",SH:"Saint Helena",KN:"Saint Kitts and Nevis",LC:"Saint Lucia",PM:"Saint Pierre and Miquelon",VC:"Saint Vincent and the Grenadines",WS:"Samoa",SM:"San Marino",ST:"Sao Tome and Principe",SA:"Saudi Arabia",SN:"Senegal",RS:"Serbia",ME:"Montenegro",SC:"Seychelles",SL:"Sierra Leone",SG:"Singapore",SK:"Slovakia",SI:"Slovenia",SB:"Solomon Islands",SO:"Somalia",ZA:"South Africa",GS:"South Georgia and the South Sandwich Islands",ES:"Spain",LK:"Sri Lanka",SD:"Sudan",SR:"Suriname",SJ:"Svalbard and Jan Mayen",SZ:"Swaziland",SE:"Sweden",CH:"Switzerland",SY:"Syrian Arab Republic",TW:"Taiwan, Province of China",TJ:"Tajikistan",TZ:"Tanzania",TH:"Thailand",TL:"Timor-Leste",TG:"Togo",TK:"Tokelau",TO:"Tonga",TT:"Trinidad and Tobago",TN:"Tunisia",TR:"Turkey",TM:"Turkmenistan",TC:"Turks and Caicos Islands",TV:"Tuvalu",UG:"Uganda",UA:"Ukraine",AE:"United Arab Emirates",GB:"United Kingdom",US:"United States",UM:"United States Minor Outlying Islands",UY:"Uruguay",UZ:"Uzbekistan",VU:"Vanuatu",VE:"Venezuela",VN:"Viet Nam",VG:"Virgin Islands, British",VI:"Virgin Islands, U.S.",WF:"Wallis and Futuna",EH:"Western Sahara",YE:"Yemen",ZM:"Zambia",ZW:"Zimbabwe"}};GMW_Geocoder.prototype.options={},GMW_Geocoder.prototype.defaultFields=GMW_Geocoders.locationFields,GMW_Geocoder.prototype.jqXHR={},GMW_Geocoder.prototype.response={provider:"",type:"",status:"",data:{},result:{}},GMW_Geocoder.prototype.initialize=function(){},GMW_Geocoder.prototype.setOptions=function(e){jQuery.extend(this.options,e)},GMW_Geocoder.prototype.geocode=function(e,o,a){this.response.type="geocode",this.setOptions(e),"undefined"==typeof a&&(a=o),this.get("geocode",this.options,o,a)},GMW_Geocoder.prototype.reverseGeocode=function(e,o,a){this.response.type="reverseGeocode",this.setOptions(e),"undefined"==typeof a&&(a=o),this.get("reverseGeocode",this.options,o,a)},GMW_Geocoder.prototype.search=function(e,o,a){this.response.type="search",this.setOptions(e),"undefined"==typeof a&&(a=o),this.get("search",this.options,o,a)},GMW_Geocoder.prototype.get=function(){},GMW_Geocoder.prototype.geocodeFailed=function(e,o){this.response.status=e,console.log("Request failed. "+this.response.status),console.log(this.jqXHR),o(this.response,e)},GMW_Geocoder.prototype.suggestResults=function(e,o,a){var n=this,t="";for(var i in e)t+='<li data-value="'+i+'">'+e[i][o]+"</li>";jQuery('<div class="gmw-geocoder-suggested-results-wrapper"><ul class="gmw-geocoder-suggested-results">'+t+"</ul></div>").appendTo("body").find("li").on("click",function(){n.geocodeSuccess(e[jQuery(this).data("value")],a),jQuery(this).closest(".gmw-geocoder-suggested-results-wrapper").fadeOut().remove()})},GMW_Geocoder.prototype.getLocationFieldValue=function(e,o){return o.indexOf(".")>-1?GMW.get_field_by_string(e,o):"undefined"!=typeof e[o]?e[o]:""},GMW_Geocoder.prototype.getLocationFields=function(e){var o=this,a=this.defaultFields,n=Object.keys(this.locationFields).length,t=0;jQuery.each(this.locationFields,function(i,r){if(jQuery.isArray(r))for(var s=0,d=r.length;d+1>s;++s)if(d>s){if(a[i]=o.getLocationFieldValue(e,r[s]),""!=a[i])return void t++}else t++;else a[i]=o.getLocationFieldValue(e,r),t++;return t==n?(a.street=a.street_number+" "+a.street_name,a.latitude=a.lat=parseFloat(a.lat),a.longitude=a.lng=parseFloat(a.lng),a):void 0})},GMW_Geocoder.prototype.getGeocodingLevel=function(e){return e.street_name.trim()?"street":e.city.trim()?"city":e.postcode.trim()?"postcode":e.region_name.trim()||e.region_code.trim()?"region":e.country_name.trim()||e.country_code.trim()?"country":""},GMW_Geocoder.prototype.getMissingData=function(e){return""==e.region_name.trim()&&""!=e.region_code.trim()&&GMW_Geocoders.regions[e.region_code]&&(e.region_name=GMW_Geocoders.regions[e.region_code]),""==e.region_code.trim()&&""!=e.region_name.trim()&&jQuery.each(GMW_Geocoders.regions,function(o,a){return e.region_name==a?(e.region_code=o,!1):void 0}),""==e.country_name.trim()&&""!=e.country_code.trim()&&GMW_Geocoders.countries[e.country_code]&&(e.country_name=GMW_Geocoders.countries[e.country_code]),""==e.country_code.trim()&&""!=e.country_name.trim()&&jQuery.each(GMW_Geocoders.countries,function(o,a){return e.country_name==a?(e.country_code=o,!1):void 0}),e},GMW_Geocoder.prototype.geocodeSuccess=function(e,o){this.response.status="OK",e=jQuery.extend(this.defaultFields,this.getLocationFields(e)),"usa"==e.country_code.toLowerCase()&&(e.country_code="US"),"united states of america"==e.country_name.toLowerCase()&&(e.country_name="United States"),e.region_code=e.region_code.toUpperCase(),e.country_code=e.country_code.toUpperCase(),e.level=this.getGeocodingLevel(e),(""==e.country_code.trim()||""==e.country_name.trim()||""==e.region_name.trim()||""==e.region_code.trim())&&(e=this.getMissingData(e)),this.response.result=e,this.response.result=GMW.apply_filters("gmw_geocoder_result_on_success",this.response.result,this.response),console.log("Geocoder results:"),console.log(this.response),o(this.response,"OK")};